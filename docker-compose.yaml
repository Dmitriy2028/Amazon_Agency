#docker build -t amazon .
#docker-compose up -d

services:
  amazon:
    image: "amazon"
    container_name: "amazon"
    ports:
      - "8080:8080"
    links:
      - "amazon-postgres"
      - "mongo"
      - "redis"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    volumes:
      - "${LOCAL_PATH}:/app/db/test_report.json"

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: reports
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  amazon-postgres:
    image: "postgres"
    container_name: "amazon-postgres"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=amazon_db

  redis:
    image: "redis"
    container_name: "redis"
    ports:
      - "6379:6379"
    restart: always